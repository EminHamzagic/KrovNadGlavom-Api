// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using krov_nad_glavom_api.Infrastructure.MySql;

#nullable disable

namespace krov_nad_glavom_api.Infrastructure.MySql.Migrations
{
    [DbContext(typeof(krovNadGlavomDbContext))]
    [Migration("20250903162201_InitializeTables")]
    partial class InitializeTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_bin")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Agency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PIB")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.AgencyRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgencyId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BuildingId")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("CommissionPercentage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("BuildingId");

                    b.ToTable("AgencyRequests");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Apartment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ApartmentNumber")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("BalconyCount")
                        .HasColumnType("int");

                    b.Property<string>("BuildingId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Orientation")
                        .HasColumnType("longtext");

                    b.Property<int>("RoomCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Building", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ElevatorCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ExtendedUntil")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FloorCount")
                        .HasColumnType("int");

                    b.Property<int>("GarageSpotCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.ConstructionCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PIB")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ConstructionCompanies");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Contract", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgencyId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ApartmentId")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("InstallmentAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("InstallmentCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.DiscountRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgencyId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ApartmentId")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("DiscountRequests");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Garage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BuildingId")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SpotNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Garages");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Installment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ContractId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PaymentProof")
                        .HasColumnType("longtext");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Installments");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.PriceList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BuildingId")
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("PenaltyPerM2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PricePerM2")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId")
                        .IsUnique();

                    b.ToTable("PriceLists");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Reservation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ApartmentId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgencyId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConstructionCompanyId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("ConstructionCompanyId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.UserAgencyFollow", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AgencyId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAgencyFollows");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.UserSession", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RefreshTokenExpiry")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.AgencyRequest", b =>
                {
                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Agency", null)
                        .WithMany()
                        .HasForeignKey("AgencyId");

                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Building", null)
                        .WithMany()
                        .HasForeignKey("BuildingId");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Apartment", b =>
                {
                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Building", null)
                        .WithMany()
                        .HasForeignKey("BuildingId");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Building", b =>
                {
                    b.HasOne("krov_nad_glavom_api.Domain.Entities.ConstructionCompany", null)
                        .WithMany()
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Contract", b =>
                {
                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Agency", null)
                        .WithMany()
                        .HasForeignKey("AgencyId");

                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Apartment", null)
                        .WithMany()
                        .HasForeignKey("ApartmentId");

                    b.HasOne("krov_nad_glavom_api.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.DiscountRequest", b =>
                {
                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Agency", null)
                        .WithMany()
                        .HasForeignKey("AgencyId");

                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Apartment", null)
                        .WithMany()
                        .HasForeignKey("ApartmentId");

                    b.HasOne("krov_nad_glavom_api.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Garage", b =>
                {
                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Building", null)
                        .WithMany()
                        .HasForeignKey("BuildingId");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Installment", b =>
                {
                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Contract", null)
                        .WithMany()
                        .HasForeignKey("ContractId");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.PriceList", b =>
                {
                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Building", null)
                        .WithOne()
                        .HasForeignKey("krov_nad_glavom_api.Domain.Entities.PriceList", "BuildingId");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.Reservation", b =>
                {
                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Apartment", null)
                        .WithMany()
                        .HasForeignKey("ApartmentId");

                    b.HasOne("krov_nad_glavom_api.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.User", b =>
                {
                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Agency", null)
                        .WithMany()
                        .HasForeignKey("AgencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("krov_nad_glavom_api.Domain.Entities.ConstructionCompany", null)
                        .WithMany()
                        .HasForeignKey("ConstructionCompanyId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.UserAgencyFollow", b =>
                {
                    b.HasOne("krov_nad_glavom_api.Domain.Entities.Agency", null)
                        .WithMany()
                        .HasForeignKey("AgencyId");

                    b.HasOne("krov_nad_glavom_api.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("krov_nad_glavom_api.Domain.Entities.UserSession", b =>
                {
                    b.HasOne("krov_nad_glavom_api.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
